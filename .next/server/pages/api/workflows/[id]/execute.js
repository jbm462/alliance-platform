"use strict";(()=>{var e={};e.id=635,e.ids=[635],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},1812:(e,t,o)=>{o.r(t),o.d(t,{config:()=>l,default:()=>u,routeModule:()=>c});var r={};o.r(r),o.d(r,{default:()=>handler});var n=o(1802),s=o(7153),a=o(6249);let i=[],d=[{id:"demo-workflow-1",title:"Content Creation Workflow",description:"A workflow for creating blog posts with AI assistance",author_id:"demo-user-123",created_at:new Date().toISOString(),updated_at:new Date().toISOString(),version:"1.0",version_notes:"Initial version",is_public:!0,category:"content",steps:[{id:"step-1",workflow_id:"demo-workflow-1",order_index:0,type:"ai",label:"Generate Topic Ideas",system_prompt:"You are a content strategist. Generate 5 engaging blog post topics.",user_prompt:"Generate topics for a tech blog about AI and productivity.",created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{id:"step-2",workflow_id:"demo-workflow-1",order_index:1,type:"human",label:"Review and Select Topic",instructions:"Review the generated topics and select the most promising one.",created_at:new Date().toISOString(),updated_at:new Date().toISOString()}]},{id:"demo-workflow-2",title:"Process Taxonomy Creation",description:"Workflow for creating a standard common process framework taxonomy for baseline purposes",author_id:"demo-user-123",created_at:new Date().toISOString(),updated_at:new Date().toISOString(),version:"1.0",version_notes:"Initial version",is_public:!0,category:"business",steps:[{id:"step-1",workflow_id:"demo-workflow-2",order_index:0,type:"human",label:"Indicate the sector / industry",instructions:"Specify the industry sector for the taxonomy framework.",created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{id:"step-2",workflow_id:"demo-workflow-2",order_index:1,type:"ai",label:"Pull APQC of said sector / industry and function",system_prompt:"You are a business process expert. Analyze the APQC framework for the specified industry.",user_prompt:"Provide APQC process categories for the specified industry sector.",created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{id:"step-3",workflow_id:"demo-workflow-2",order_index:2,type:"human",label:"Share any client business process documentation",instructions:"Upload or provide any existing business process documentation from the client.",created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{id:"step-4",workflow_id:"demo-workflow-2",order_index:3,type:"ai",label:"Tailor taxonomy to the client and indicate any key nuances to consider",system_prompt:"You are a business process consultant. Create a customized taxonomy based on APQC and client documentation.",user_prompt:"Create a tailored process taxonomy that incorporates client-specific nuances and requirements.",created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{id:"step-5",workflow_id:"demo-workflow-2",order_index:4,type:"ai",label:"Create question set and focus process areas for human to leverage in client discussion",system_prompt:"You are a business consultant. Create strategic questions for client engagement.",user_prompt:"Generate a comprehensive question set for client discussions about process areas.",created_at:new Date().toISOString(),updated_at:new Date().toISOString()}]}];async function handler(e,t){let{id:o}=e.query;if("POST"===e.method)try{let e=d.find(e=>e.id===o);if(!e)return t.status(404).json({error:"Workflow not found"});let r=`instance-${Date.now()}`,n=new Date().toISOString(),s={id:r,workflow_id:o,started_by:"demo-user-123",started_at:n,completed_at:null,status:"in_progress",current_step_index:0,steps_completed:[],current_step_data:null,total_steps:e.steps.length,created_at:n,updated_at:n};return i.push(s),t.status(201).json({instance:s,message:"Workflow started successfully"})}catch(e){return console.error("Error starting workflow:",e),t.status(500).json({error:"Failed to start workflow"})}if("GET"===e.method)try{let{instanceId:r}=e.query;if(r){let e=i.find(e=>e.id===r);if(!e)return t.status(404).json({error:"Workflow instance not found"});return t.status(200).json({instance:e})}{let e=i.filter(e=>e.workflow_id===o);return t.status(200).json({instances:e})}}catch(e){return console.error("Error fetching workflow instances:",e),t.status(500).json({error:"Failed to fetch workflow instances"})}if("PUT"===e.method)try{let{instanceId:o,action:r,stepData:n}=e.body,s=i.find(e=>e.id===o);if(!s)return t.status(404).json({error:"Workflow instance not found"});if("complete_step"===r){let e=d.find(e=>e.id===s.workflow_id);if(!e)return t.status(404).json({error:"Workflow not found"});let o=e.steps[s.current_step_index];if(!o)return t.status(400).json({error:"Invalid step index"});let r={...n};return s.steps_completed.push({step_index:s.current_step_index,completed_at:new Date().toISOString(),data:r}),r.aiCost&&(s.total_cost=(s.total_cost||0)+r.aiCost),s.current_step_index+=1,s.updated_at=new Date().toISOString(),s.current_step_index>=s.total_steps&&(s.status="completed",s.completed_at=new Date().toISOString()),t.status(200).json({instance:s})}if("update_step_data"===r)return s.current_step_data=n,s.updated_at=new Date().toISOString(),t.status(200).json({instance:s});return t.status(400).json({error:"Invalid action"})}catch(e){return console.error("Error updating workflow instance:",e),t.status(500).json({error:"Failed to update workflow instance"})}return t.status(405).json({error:"Method not allowed"})}let u=(0,a.l)(r,"default"),l=(0,a.l)(r,"config"),c=new n.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/workflows/[id]/execute",pathname:"/api/workflows/[id]/execute",bundlePath:"",filename:""},userland:r})}};var t=require("../../../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),o=t.X(0,[222],()=>__webpack_exec__(1812));module.exports=o})();